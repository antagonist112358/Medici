//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medici {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ErrorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Medici.ErrorMessages", typeof(ErrorMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument value must be set to a non-default value..
        /// </summary>
        internal static string ArgumentCannotBeDefault {
            get {
                return ResourceManager.GetString("ArgumentCannotBeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be null or empty..
        /// </summary>
        internal static string ArgumentCannotBeEmpty {
            get {
                return ResourceManager.GetString("ArgumentCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be null..
        /// </summary>
        internal static string ArgumentCannotBeNull {
            get {
                return ResourceManager.GetString("ArgumentCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be null or only contain whitespace characters..
        /// </summary>
        internal static string ArgumentCannotBeNullOrWhitespace {
            get {
                return ResourceManager.GetString("ArgumentCannotBeNullOrWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The component loader threw an exception while iterating the loaded assemblies. This is a non-recoverable error..
        /// </summary>
        internal static string ComponentLoaderException {
            get {
                return ResourceManager.GetString("ComponentLoaderException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find or access dll: {0}.
        /// </summary>
        internal static string DllNotFound {
            get {
                return ResourceManager.GetString("DllNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key \&quot;{0}\&quot; already exists in this collection, which does not allow duplicate keys..
        /// </summary>
        internal static string DuplicateKeyNotAllowed {
            get {
                return ResourceManager.GetString("DuplicateKeyNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boot of Runtime module failed due to a bootcode exception..
        /// </summary>
        internal static string FailedToBootRuntime {
            get {
                return ResourceManager.GetString("FailedToBootRuntime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load specified runtime assembly file: {0}.
        /// </summary>
        internal static string FailedToLoadRuntimeAssembly {
            get {
                return ResourceManager.GetString("FailedToLoadRuntimeAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScanAssemblyForImplementations can only scan an assembly for abstract classes or interfaces..
        /// </summary>
        internal static string InvalidAssemblyScanTargetType {
            get {
                return ResourceManager.GetString("InvalidAssemblyScanTargetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maybe&lt;{0}&gt; does not have a value assigned..
        /// </summary>
        internal static string MaybeDoesNotHaveValue {
            get {
                return ResourceManager.GetString("MaybeDoesNotHaveValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module loader threw an exception while iterating the loaded assemblies. This is a non-recoverable error..
        /// </summary>
        internal static string ModuleLoaderException {
            get {
                return ResourceManager.GetString("ModuleLoaderException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name generating function must be specified..
        /// </summary>
        internal static string NameGeneratorExpressionMissing {
            get {
                return ResourceManager.GetString("NameGeneratorExpressionMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find class of type Matrix.Runtime in specified runtime assembly: {0}.
        /// </summary>
        internal static string NoRuntimeTypeFoundInAssembly {
            get {
                return ResourceManager.GetString("NoRuntimeTypeFoundInAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter name must be specified..
        /// </summary>
        internal static string ParameterNameMissing {
            get {
                return ResourceManager.GetString("ParameterNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required runtime assembly not found at: {0}.
        /// </summary>
        internal static string RuntimeAssemblyNotFound {
            get {
                return ResourceManager.GetString("RuntimeAssemblyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must boot the runtime before trying to access the running instance..
        /// </summary>
        internal static string RuntimeBootRequired {
            get {
                return ResourceManager.GetString("RuntimeBootRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create instance of runtime class {0} in specified runtime assembly: {1}.
        /// </summary>
        internal static string RuntimeCreateInstanceException {
            get {
                return ResourceManager.GetString("RuntimeCreateInstanceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument of type {0} does not implement required interface: {1}..
        /// </summary>
        internal static string TypeNotImplementInterface {
            get {
                return ResourceManager.GetString("TypeNotImplementInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument of type {0} does not inherit from required base class of type: {1}..
        /// </summary>
        internal static string TypeNotInheritFromType {
            get {
                return ResourceManager.GetString("TypeNotInheritFromType", resourceCulture);
            }
        }
    }
}
